name: UI Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run UI tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: playwright install --with-deps
    
    - name: Build dashboard
      run: python build.py
    
    - name: Run UI tests
      run: |
        python -m pytest tests/ui/ \
          --browser ${{ matrix.browser }} \
          --video on \
          --screenshot on \
          --junitxml=ui-test-results-${{ matrix.browser }}.xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ui-test-results-${{ matrix.browser }}
        path: |
          ui-test-results-${{ matrix.browser }}.xml
          test-results/
    
    - name: Upload videos
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ui-test-videos-${{ matrix.browser }}
        path: test-results/

  ui-tests-mobile:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: playwright install --with-deps
    
    - name: Build dashboard
      run: python build.py
    
    - name: Run mobile UI tests
      run: |
        python -m pytest tests/ui/test_dashboard_ui.py::TestResponsiveDesign \
          --browser chromium \
          --video on \
          --screenshot on \
          --junitxml=ui-test-results-mobile.xml
    
    - name: Upload mobile test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ui-test-results-mobile
        path: |
          ui-test-results-mobile.xml
          test-results/

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: playwright install --with-deps
    
    - name: Build dashboard
      run: python build.py
    
    - name: Run performance tests
      run: |
        python -m pytest tests/ui/test_performance.py \
          --browser chromium \
          --video on \
          --screenshot on \
          --junitxml=ui-test-results-performance.xml
    
    - name: Upload performance test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ui-test-results-performance
        path: |
          ui-test-results-performance.xml
          test-results/

  test-summary:
    runs-on: ubuntu-latest
    needs: [ui-tests, ui-tests-mobile, performance-tests]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create test summary
      run: |
        echo "# UI Test Results Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Test Results" >> test-summary.md
        echo "" >> test-summary.md
        
        for browser in chromium firefox webkit; do
          if [ -f "ui-test-results-$browser/ui-test-results-$browser.xml" ]; then
            echo "### $browser" >> test-summary.md
            echo "- Tests completed" >> test-summary.md
            echo "" >> test-summary.md
          fi
        done
        
        if [ -f "ui-test-results-mobile/ui-test-results-mobile.xml" ]; then
          echo "### Mobile Tests" >> test-summary.md
          echo "- Mobile responsive tests completed" >> test-summary.md
          echo "" >> test-summary.md
        fi
        
        if [ -f "ui-test-results-performance/ui-test-results-performance.xml" ]; then
          echo "### Performance Tests" >> test-summary.md
          echo "- Performance tests completed" >> test-summary.md
          echo "" >> test-summary.md
        fi
    
    - name: Upload test summary
      uses: actions/upload-artifact@v3
      with:
        name: ui-test-summary
        path: test-summary.md
